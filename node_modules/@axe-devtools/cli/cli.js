#!/usr/bin/env node

const { execSync } = require('child_process');
const { existsSync } = require('fs');
const { join } = require('path');

const dir = join(__dirname, 'pkgs', '@axe-devtools');

let program = '';
if (process.platform === 'darwin') {
  program = join(dir, 'axe-macos');
} else if (process.platform === 'win32') {
  program = join(dir, 'axe-win.exe');
} else if (process.platform === 'linux') {
  program = join(dir, 'axe-linux');
} else {
  // For platforms we don't compile a binary, we sadly must exit early.
  throw new Error(`Unsupported OS ("${process.platform}")`);
}

// Sanity check.
if (!existsSync(program)) {
  throw new Error('Could not locate binary for your OS');
}

const args = process.argv.slice(2).join(' ');
const cmd = execSync(
  `"${program}" ${args}`,
  { stdio: 'inherit' },
  { encoding: 'utf-8' }
);

if (cmd) {
  console.log(cmd);
}
